name: Server

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-server-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Fetch git submodules
      run: git submodule update --init --recursive --remote

    - name: Install OpenSSL
      run: sudo apt install libssl-dev

    - name: Install protobuf
      run: sudo apt install libprotobuf-dev protobuf-compiler

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/BallanceMMOServer/build -S ${{github.workspace}}/BallanceMMOServer -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/BallanceMMOServer/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/BallanceMMOServer
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Zipping Artifacts
      uses: vimtor/action-zip@v1
      with:
        files: BallanceMMOServer/build/
        dest: BallanceMMOServer.zip

    - name: Release Artifact
      uses: actions/upload-artifact@v3
      with:
        name: server-linux.zip
        path: BallanceMMOServer.zip

  build-server-windows:
    runs-on: windows-latest
    env:
      VCPKG_ROOT: ${{github.workspace}}/submodule/vcpkg
    steps:
      - uses: actions/checkout@v2

      - uses: lukka/get-cmake@latest

      - name: Fetch git submodules
        run: git submodule update --init --recursive --remote

      - name: Restore artifacts, setup vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          vcpkgDirectory: '${{env.VCPKG_ROOT}}'
          vcpkgJsonGlob: vcpkg.json
          runVcpkgInstall: false

      # Setup MSVC command prompt environment vars
      - uses: ilammy/msvc-dev-cmd@v1

      - name: vcpkg check / install dependencies
        working-directory: ${{env.VCPKG_ROOT}}
        run: vcpkg install

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/BallanceMMOServer/build -S ${{github.workspace}}/BallanceMMOServer -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${{env.VCPKG_ROOT}}/scripts/buildsystems/vcpkg.cmake -DVCPKG_MANIFEST_MODE=ON -DVCPKG_MANIFEST_DIR=${{github.workspace}}

      - name: Build
        working-directory: ${{github.workspace}}/BallanceMMOServer/build
        run: cmake --build ${{github.workspace}}/BallanceMMOServer/build --config ${{env.BUILD_TYPE}}

      - name: Test
        working-directory: ${{github.workspace}}/BallanceMMOServer
        run: ctest -C ${{env.BUILD_TYPE}}

      - name: Release Artifact
        uses: actions/upload-artifact@v3
        with:
          name: server-windows.zip
          path: BallanceMMOServer/build/${{env.BUILD_TYPE}}